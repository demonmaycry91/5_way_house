"""empty message

Revision ID: 22d1e8b77d0b
Revises: 
Create Date: 2025-09-07 21:55:30.695499

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '22d1e8b77d0b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_settlement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_deposit', sa.Float(), nullable=True),
    sa.Column('total_next_day_opening_cash', sa.Float(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_daily_settlement')),
    sa.UniqueConstraint('date', name=op.f('uq_daily_settlement_date'))
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('slug', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location')),
    sa.UniqueConstraint('name', name=op.f('uq_location_name'))
    )
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_slug'), ['slug'], unique=True)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('permissions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role')),
    sa.UniqueConstraint('name', name=op.f('uq_role_name'))
    )
    op.create_table('system_setting',
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('key', name=op.f('pk_system_setting'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('google_id', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email')),
    sa.UniqueConstraint('username', name=op.f('uq_user_username'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_google_id'), ['google_id'], unique=True)

    op.create_table('business_day',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('location_notes', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('opening_cash', sa.Float(), nullable=False),
    sa.Column('total_sales', sa.Float(), nullable=True),
    sa.Column('closing_cash', sa.Float(), nullable=True),
    sa.Column('expected_cash', sa.Float(), nullable=True),
    sa.Column('cash_diff', sa.Float(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('total_transactions', sa.Integer(), nullable=True),
    sa.Column('cash_breakdown', sa.Text(), nullable=True),
    sa.Column('signature_operator', sa.Text(), nullable=True),
    sa.Column('signature_reviewer', sa.Text(), nullable=True),
    sa.Column('signature_cashier', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('donation_total', sa.Float(), nullable=True),
    sa.Column('other_total', sa.Float(), nullable=True),
    sa.Column('next_day_opening_cash', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_business_day_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_day'))
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('category_type', sa.String(length=30), server_default='product', nullable=False),
    sa.Column('discount_rules', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_category_location_id_location')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category'))
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_roles_users_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_roles_users_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_roles_users'))
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('item_count', sa.Integer(), nullable=False),
    sa.Column('business_day_id', sa.Integer(), nullable=False),
    sa.Column('cash_received', sa.Float(), nullable=True),
    sa.Column('change_given', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['business_day_id'], ['business_day.id'], name=op.f('fk_transaction_business_day_id_business_day')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction'))
    )
    op.create_table('transaction_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_transaction_item_category_id_category')),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], name=op.f('fk_transaction_item_transaction_id_transaction')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transaction_item'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_item')
    op.drop_table('transaction')
    op.drop_table('roles_users')
    op.drop_table('category')
    op.drop_table('business_day')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_google_id'))

    op.drop_table('user')
    op.drop_table('system_setting')
    op.drop_table('role')
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_slug'))

    op.drop_table('location')
    op.drop_table('daily_settlement')
    # ### end Alembic commands ###
